# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-11-10 07:23
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('toeic', '0043_auto_20161027_0706'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='toeic.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('translation', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to='audios/phrases')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='toeic.Level')),
                ('listeningtopics', models.ManyToManyField(blank=True, null=True, to='toeic.ListeningTopic')),
                ('topics', models.ManyToManyField(blank=True, null=True, to='toeic.Topic')),
                ('vocabs', models.ManyToManyField(blank=True, null=True, to='toeic.Vocab')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=1, null=True)),
                ('text', models.TextField(default='')),
                ('fulltext', models.TextField(blank=True, default='', null=True)),
                ('explanation', models.TextField(blank=True, default='', null=True)),
                ('translation', models.TextField(blank=True, default='', null=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to='audios/questions')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='toeic.Level')),
                ('vocabs', models.ManyToManyField(blank=True, null=True, to='toeic.Vocab')),
            ],
            options={
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='SpeakingAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('translation', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to='audios/speakingquestion')),
            ],
        ),
        migrations.CreateModel(
            name='SpeakingLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passage', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('video', models.URLField(null=True)),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SpeakingPractice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.SpeakingLesson')),
            ],
        ),
        migrations.CreateModel(
            name='SpeakingQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=1, null=True)),
                ('text', models.CharField(max_length=200)),
                ('translation', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to='audios/speakingquestion')),
                ('image', models.FileField(blank=True, null=True, upload_to='images/speakingquestion')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='toeic.Level')),
            ],
        ),
        migrations.CreateModel(
            name='SpeakingQuestionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('vocabs', models.ManyToManyField(blank=True, null=True, to='toeic.Vocab')),
            ],
        ),
        migrations.CreateModel(
            name='SpeakingTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('testset', models.ManyToManyField(blank=True, null=True, to='toeic.SpeakingQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='UserSpeakingAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.IntegerField(blank=True, default=1, null=True)),
                ('text', models.TextField(default='')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.SpeakingLesson')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.SpeakingQuestion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='speakingquestion',
            name='questiontype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='toeic.SpeakingQuestionType'),
        ),
        migrations.AddField(
            model_name='speakingquestion',
            name='vocabs',
            field=models.ManyToManyField(blank=True, null=True, to='toeic.Vocab'),
        ),
        migrations.AddField(
            model_name='speakingpractice',
            name='practiceset',
            field=models.ManyToManyField(blank=True, null=True, to='toeic.SpeakingQuestion'),
        ),
        migrations.AddField(
            model_name='speakinglesson',
            name='questionset',
            field=models.ManyToManyField(blank=True, null=True, to='toeic.SpeakingQuestion'),
        ),
        migrations.AddField(
            model_name='speakinglesson',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toeic.SpeakingTopic'),
        ),
        migrations.AddField(
            model_name='speakinganswer',
            name='speakingQuestion',
            field=models.ManyToManyField(blank=True, null=True, to='toeic.SpeakingQuestion'),
        ),
        migrations.AddField(
            model_name='speakinganswer',
            name='vocabs',
            field=models.ManyToManyField(blank=True, null=True, to='toeic.Vocab'),
        ),
    ]
